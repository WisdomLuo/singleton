name: github-actions
on: [pull_request, push]
jobs:      
  check-header:
    name: Check Header
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - run: python -V
  unit-test:
    name: Unit Test
    runs-on: ubuntu-latest
#     needs: check-header
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '8'
      - name: run unit test
        run: |
          java -version
          cd $GITHUB_WORKSPACE/g11n-ws
          ./gradlew test --console=plain
  code-scan:
    name: Code Scan
    runs-on: ubuntu-latest
    env: 
      SONAR_ORG: ${{ secrets.SONAR_ORG }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '8'
      - run: java -version
      - run: git clone --branch=devops https://github.com/vmware/singleton.git devops
      # extract branch name
      - name: Extract branch name
        if: github.event_name != 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
        id: extract_branch
      # extract branch name on pull request
      - name: Print branch name
        if: github.event_name == 'pull_request'
        run: echo "BRANCH_NAME=${GITHUB_HEAD_REF}" >> $GITHUB_ENV
      # print branch name
      - name: Get branch name
        run: echo 'The branch name is' $BRANCH_NAME
      - name: config sonar project
        run: cd $GITHUB_WORKSPACE/devops/sonar/ && python ./config_sonar_project.py -ProjectName=$SONAR_ORG-singleton-service-${GITHUB_REF#refs/heads/} -ProjectKey=$SONAR_ORG-singleton-service-${GITHUB_REF#refs/heads/} -OrgKey=$SONAR_ORG -QualityGateName=service-gate -QualityGateConditions="./quality_gates/service_quality_gate.json" -SonarToken=$SONAR_TOKEN
      - name: change setting for gradle
        run: cd $GITHUB_WORKSPACE/g11n-ws && sed -i "s/rootProject.name = 'singleton'/rootProject.name = '$SONAR_ORG-singleton-service-${GITHUB_REF#refs/heads/}'/" settings.gradle && cat settings.gradle
      - name: generate coverage file
        run: cd $GITHUB_WORKSPACE/g11n-ws && ./gradlew test jacocoTestReport
      - name: Analyze with SonarCloud
        uses: sonarsource/sonarcloud-github-action@master
        with:
          projectBaseDir: g11n-ws
          args: >
            -Dsonar.projectKey=wisdomluo-singleton-service-master
            -Dsonar.projectName=wisdomluo-singleton-service-master
            -Dsonar.sources=.
            -Dsonar.language=java
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.organization=wisdomluo
            -Dsonar.exclusions=tools/tool-cldr-extractor/**,**/*.py,**/*.xml,**/*.css,**/*.js,**/*.html
            -Dsonar.java.binaries=vip-manager-i18n/build/classes/java,vip-manager-l10n/build/classes/java,vip-manager-lite-i18n/build/classes/java
            -Dsonar.java.test.binaries=vip-manager-i18n/build/classes/test,vip-manager-l10n/build/classes/test,vip-manager-lite-i18n/build/classes/test
            -Dsonar.coverage.jacoco.xmlReportPaths=vip-manager-i18n/build/reports/jacoco.xml,vip-manager-l10n/build/reports/jacoco.xml,vip-manager-lite-i18n/build/reports/jacoco.xml
            -Dsonar.coverage.exclusions=modules/**,tools/**,vip-common/src/main/java/com/vmware/vip/common/**,vip-manager-l10n-agent/**,vip-manager-i18n/build/**,vip-manager-l10n/build/**,vip-manager-lite-i18n/build/**,vip-manager-i18n/src/test/**,vip-manager-l10n/src/test/**,vip-manager-lite-i18n/src/test/**
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
          SONAR_ORG: ${{ secrets.SONAR_ORG }}
  smoke-test:
    name: Smoke Test
    runs-on: ubuntu-latest
#     needs: unit-test
    steps:
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '8'
      - run: java -version
      - run: pwd && ls -la
  
